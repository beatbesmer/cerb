{
    "name": "ai.cerb.automationBuilder.action.dataQuery",
    "description": "",
    "extension_id": "cerb.trigger.interaction.internal",
    "script": "start:\r\n  set:\r\n    query_examples:\r\n      custom:\r\n        label: Build it myself\r\n      records_search:\r\n        label: Get record dictionaries by search\r\n      records_subtotal:\r\n        label: Subtotal records by field\r\n\r\n  await/objective:\r\n    form:\r\n      title: Execute a data query\r\n      elements:\r\n        sheet/prompt_example:\r\n          label: What would you like to do?\r\n          data@key: query_examples\r\n          schema:\r\n            layout:\r\n              style: grid\r\n              filtering@bool: yes\r\n              headings@bool: no\r\n              paging@bool: yes\r\n              title_column: label\r\n            columns:\r\n              selection/__index:\r\n                params:\r\n                  mode: single\r\n                  label_key: label\r\n\r\n  decision/example:\r\n    outcome/records_search:\r\n      if@bool: {{'records_search' == prompt_example}}\r\n      then:\r\n        await/record_type:\r\n          form:\r\n            elements:\r\n              sheet/prompt_record_type@ref: promptRecordType\r\n        \r\n        set:\r\n          snippet@text:\r\n            type:worklist.records\r\n            of:{{prompt_record_type}}\r\n            query:(\r\n              limit:25\r\n              sort:id\r\n            )\r\n            format:dictionaries\r\n\r\n    outcome/records_subtotal:\r\n      if@bool: {{'records_subtotal' == prompt_example}}\r\n      then:\r\n        await/record_type:\r\n          form:\r\n            elements:\r\n              sheet/prompt_record_type@ref: promptRecordType\r\n        \r\n        set:\r\n          snippet@text:\r\n            type:worklist.subtotals\r\n            of:{{prompt_record_type}}\r\n            by:[{{prompt_record_fields|join(',')}}]\r\n            query:(\r\n              \r\n            )\r\n            format:dictionaries\r\n\r\n    outcome/custom:\r\n      then:\r\n        data.query/dataTypes:\r\n          inputs:\r\n            query@text:\r\n              type:data.query.types\r\n              format:dictionaries\r\n          output: results\r\n          on_success:\r\n            await:\r\n              form:\r\n                elements:\r\n                  sheet/prompt_type:\r\n                    label: What kind of data query?\r\n                    required@bool: yes\r\n                    limit: 50\r\n                    data@key: results:data\r\n                    schema:\r\n                      layout:\r\n                        title_column: name;\r\n                        headings@bool: no\r\n                        filtering@bool: yes\r\n                        style: grid\r\n                        style_params:\r\n                      columns:\r\n                        selection/name:\r\n                          params:\r\n                            mode: single\r\n                            label_key: name\r\n                        text/description:\r\n            set:\r\n              snippet@text:\r\n                type:{{prompt_type}}\r\n                \r\n                format:dictionaries\r\n\r\n  await/custom:\r\n    form:\r\n      elements:\r\n        editor/prompt_query:\r\n          label: Query:\r\n          required@bool: yes\r\n          syntax: cerb_query_data\r\n          default@key: snippet\r\n        \r\n        text/prompt_output_key:\r\n          label: Output Key:\r\n          required@bool: yes\r\n          default: results\r\n          placeholder: results\r\n\r\n  return:\r\n    snippet@text:\r\n      data.query/{{random_string(6)|lower}}:\r\n        inputs:\r\n          query@text:\r\n            {{prompt_query|indent('      ',2)}}\r\n        output: {{prompt_output_key}}\r\n        #on_simulate:\r\n        #on_error:\r\n        #on_success:\r\n\r\n&promptRecordType:\r\n  label: Which record type?\r\n  required@bool: yes\r\n  data:\r\n    automation:\r\n      uri: cerb:automation:cerb.data.record.types\r\n  limit: 100\r\n  schema:\r\n    layout:\r\n      style: grid\r\n      filtering@bool: yes\r\n      headings@bool: no\r\n    columns:\r\n      selection/uri:\r\n        params:\r\n          mode: single\r\n          label_key: label_plural\r\n",
    "policy_kata": "commands:\r\n  data.query:\r\n    deny/type@bool: {{query.type != 'data.query.types'}}\r\n    allow@bool: yes",
    "created_at": 1600722810,
    "updated_at": 1639701441
}